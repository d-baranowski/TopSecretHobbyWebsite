@{
    ViewBag.Title = "Index";
}

@section styles{
    @Styles.Render("~/templates/bs-ecosave/css")
    <script src="//angular-ui.github.io/bootstrap/ui-bootstrap-tpls-0.13.4.js"></script>
    <link rel="stylesheet" type="text/css" href='../../Content/displayCards.css' />
}

<!--Loading gif-->
<div id="pre-div">
    <div id="loader">
    </div>
</div>


<div id="pageContainer" ng-app="myApp" ng-controller="myCtrl" class="container-fluid">
        <br /><br />

        <!--Left Collumn-->
    <div id="mainDeckDrawer" class="cardDrawer col-md-2 showOnDrag follow-scroll" ng-drop="true" ng-drop-success="onDropToMainDeck($data,$event)">
        <p>Main Deck</p>
    </div>

        <!--Middle Collumn-->
        <div class="col-md-8">
            <!--Container for all filter control buttons-->
            @{
                Html.RenderPartial("_cardSeachTool");
            }
            <br>

            <!--Display filtered cards in Paginated form-->
            @{
                Html.RenderPartial("_cardDisplay");
            }
            <br>

            <!--Allows creating and modyfying decks-->
            @{
                Html.RenderPartial("_deckMenu");
            }
            <br>
        </div>

        <!--Right Collumn-->
        <div id="sideboardDrawer" class="col-md-2 cardDrawer showOnDrag follow-scroll" ng-drop="true" ng-drop-success="onDropToSideBoard($data,$event)">
            <p>Sideboard</p>
        </div>

</div>
<!--Page End-->


@section scripts{

    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/templates/bs-ecosave/")

    <script src="~/AngularApp/deckBuilderApp.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/angularjs/1.4.5/angular-animate.js"></script>
    <script src="//angular-ui.github.io/bootstrap/ui-bootstrap-tpls-0.13.4.js"></script>

    <script>
        var element = $('.follow-scroll'),
        originalY = element.offset().top;

        // Space between element and top of screen (when scrolling)
        var topMargin = 100;

        // Should probably be set in CSS; but here just for emphasis
        element.css('position', 'relative');

        $(window).on('scroll', function (event) {
            var scrollTop = $(window).scrollTop();

            element.stop(false, false).animate({
                top: scrollTop < originalY
                        ? 0
                        : scrollTop - originalY + topMargin
            }, 300);
        });
    </script>
}

